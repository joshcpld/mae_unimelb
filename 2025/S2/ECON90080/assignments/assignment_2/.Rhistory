library(tidyverse)
library(lubridate)
library(quantmod)
options(getSymbols.warning4.0 = FALSE)
write.csv(xcor_mat, "xcor_mat.csv")
options(getSymbols.warning4.0 = FALSE)
# Map FRED IDs to tidy names
fred_ids <- tribble(
~id,                  ~series,
"A191RA3Q086SBEA",    "GDP (real, Q)",
"DDURRA3M086SBEA",    "Consumption: Durables (real, M)",
"DNDGRA3M086SBEA",    "Consumption: Nondurables (real, M)",
"DSERRA3Q086SBEA",    "Consumption: Services (real, Q)"
)
# 1) Download all series and stack
raw_long <- fred_ids$id %>%
map_dfr(~{
xt <- getSymbols(.x, src = "FRED", auto.assign = FALSE)
tibble(date = as.Date(index(xt)), value = as.numeric(xt[,1]), id = .x)
}) %>%
left_join(fred_ids, by = "id")
# 3) Make a wide table of growth just once (for plotting + stats)
g_wide <- g_long %>%
select(series, qtr, g) %>%
pivot_wider(names_from = series, values_from = g) %>%
rename(
gdp_g   = `GDP (real, Q)`,
dur_g   = `Consumption: Durables (real, M)`,
nond_g  = `Consumption: Nondurables (real, M)`,
serv_g  = `Consumption: Services (real, Q)`
)
# 2) Convert to quarterly (monthly â†’ quarterly mean), then log-diff per series
g_long <- raw_long %>%
mutate(qtr = floor_date(date, "quarter")) %>%
group_by(series, qtr) %>%
summarize(val_q = mean(value, na.rm = TRUE), .groups = "drop_last") %>%
arrange(series, qtr) %>%
mutate(g = log(val_q) - lag(log(val_q))) %>%   # quarterly log growth
ungroup() %>%
filter(qtr >= ymd("1960-01-01"), qtr <= ymd("2025-03-31")) %>%
drop_na(g)
# 3) Make a wide table of growth just once (for plotting + stats)
g_wide <- g_long %>%
select(series, qtr, g) %>%
pivot_wider(names_from = series, values_from = g) %>%
rename(
gdp_g   = `GDP (real, Q)`,
dur_g   = `Consumption: Durables (real, M)`,
nond_g  = `Consumption: Nondurables (real, M)`,
serv_g  = `Consumption: Services (real, Q)`
)
# 4) Plot: each consumption category vs GDP growth
plot_df_ts <- g_wide %>%
select(qtr, gdp_g, dur_g, nond_g, serv_g) %>%
pivot_longer(-qtr, names_to = "series", values_to = "growth") %>%
mutate(series = recode(series,
gdp_g  = "GDP",
dur_g  = "Durables",
nond_g = "Nondurables",
serv_g = "Services"))
ggplot(plot_df_ts, aes(x = qtr, y = growth, color = series)) +
geom_line(linewidth = 0.8) +
labs(
title = "Chart 1: GDP co-movements",
x = "Real GDP growth (log diff)",
y = "Consumption category growth (log diff)"
) +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom")
# Compute standard deviations of growth rates
vol_stats <- g_wide %>%
select(gdp_g, dur_g, nond_g, serv_g) %>%
summarise(across(everything(), sd, na.rm = TRUE)) %>%
pivot_longer(everything(), names_to = "series", values_to = "sd") %>%
mutate(series = recode(series,
gdp_g  = "GDP",
dur_g  = "Durables",
nond_g = "Nondurables",
serv_g = "Services")) %>%
arrange(desc(sd))
# Compute standard deviations of growth rates
vol_stats <- g_wide %>%
select(gdp_g, dur_g, nond_g, serv_g) %>%
summarise(across(everything(), \(x) sd(x, na.rm = TRUE))) %>%
pivot_longer(everything(), names_to = "series", values_to = "sd") %>%
mutate(series = recode(series,
gdp_g  = "GDP",
dur_g  = "Durables",
nond_g = "Nondurables",
serv_g = "Services")) %>%
arrange(desc(sd))
vol_stats
lags <- 0:3
# Compute cross-correlations in matrix form
xcor_mat <- g_wide %>%
select(qtr, gdp_g, dur_g, nond_g, serv_g) %>%
pivot_longer(c(dur_g, nond_g, serv_g),
names_to = "series", values_to = "cons_g") %>%
group_by(series) %>%
group_modify(~{
map_dfr(lags, function(L) tibble(
lag = L,
corr = cor(dplyr::lag(.x$cons_g, L), .x$gdp_g, use = "complete.obs")
))
}) %>%
ungroup() %>%
pivot_wider(names_from = lag, values_from = corr,
names_prefix = "lag_")
xcor_mat
write_csv(xcor_mat, "xcor_mat.csv")

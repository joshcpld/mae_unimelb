library(tidyverse)
library(lubridate)
library(janitor)
library(forecast)
data <- data %>%
mutate(time_prediction = predict(eq))
data <- data %>%
mutate(time_prediction = predict(eq), newdata = data)
data <- data %>%
mutate(time_prediction = predict(eq, newdata = data))
data <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
# Filter for estimation period
filter(date >= as.Date("2000-03-01") & date <= as.Date("2018-12-01")) %>%
# Creating a time trend dummy
mutate(time = row_number() * 0.25)
head(data)
```
```{r q1b}
eq <- lm(y_log~time, data = data)
summary(eq)
data <- data %>%
mutate(time_prediction = predict(eq, newdata = data))
ggplot(data, aes(x = time)) +
geom_line(aes(y = y), color = "blue", size = 1) +
geom_line(aes(y = time_prediction), color = "red", size = 1, linetype = "dashed")
ggplot(data, aes(x = time)) +
geom_line(aes(y = y_log), color = "blue", size = 1) +
geom_line(aes(y = time_prediction), color = "red", size = 1, linetype = "dashed")
ggplot(data, aes(x = date)) +
geom_line(aes(y = y_log), color = "blue", size = 1) +
geom_line(aes(y = time_prediction), color = "red", size = 1, linetype = "dashed") +
labs(title = "Retail sales", y = "log(Retail sales)", x = "Date")
library(tidyverse)
library(lubridate)
library(janitor)
library(forecast)
theme_set(theme_minimal())
ggplot(data, aes(x = date)) +
geom_line(aes(y = y_log), color = "blue", size = 1) +
geom_line(aes(y = time_prediction), color = "red", size = 1, linetype = "dashed") +
labs(title = "Retail sales", y = "log(Retail sales)", x = "Date")
data_2019 <- data.frame(time = seq(from = as.numeric(tail(df1$some_column, 1)) + 0.25, by = 0.25, length.out = 4)
data_2019 <- data.frame(time = seq(from = as.numeric(tail(df1$some_column, 1)) + 0.25, by = 0.25, length.out = 4)
data_2019 <- data.frame(time = seq(from = as.numeric(tail(df1$some_column, 1)) + 0.25, by = 0.25, length.out = 4))
data <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
# Filter for estimation period
filter(date >= as.Date("2000-03-01") & date <= as.Date("2018-12-01")) %>%
# Creating a time trend dummy
mutate(time = row_number() * 0.25)
data_2019 <- data.frame(time = seq(from = as.numeric(tail(data$date, 1)) + 0.25, by = 0.25, length.out = 4))
View(data_2019)
data_2019 <- data.frame(time = seq(from = as.numeric(tail(data$time, 1)) + 0.25, by = 0.25, length.out = 4))
data_2019 <- data.frame()
data_2019 <- data.frame() %>%
# Creating new time dummy values
mutate(time = seq(from = as.numeric(tail(data$time, 1)) + 0.25, by = 0.25, length.out = 4))
data_2019 <- data.frame(time = seq(from = as.numeric(tail(data$time, 1)) + 0.25, by = 0.25, length.out = 4))
data_2019 <- data.frame(time = seq(from = as.numeric(tail(data$time, 1)) + 0.25, by = 0.25, length.out = 4)) %>%
mutate(forecasts = predict(eq, newdata = data_2019))
data <- data %>%
mutate(time_prediction = predict(eq, newdata = data))
ggplot(data, aes(x = date)) +
geom_line(aes(y = y_log), color = "blue", size = 1) +
geom_line(aes(y = time_prediction), color = "red", size = 1, linetype = "dashed") +
labs(title = "Retail sales", y = "log(Retail sales)", x = "Date")
data_2019 <- data.frame(time = seq(from = as.numeric(tail(data$time, 1)) + 0.25, by = 0.25, length.out = 4)) %>%
mutate(forecasts = predict(eq, newdata = data_2019))
data_q1e <- data %>%
mutate(residuals = eq$resid)
View(data_q1e)
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
left_join(data_2019, by = time)
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
left_join(data_2019, by = "time")
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = "time")
data_2019 <- data_2019 %>%
mutate(forecasts = predict(eq, newdata = data_2019)) %>%
mutate(date = seq.Date(from = as.Date("2019-03-01"),
to = as.Date("2019-12-01"),
by = "3 months"))
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = "time")
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = c("date","time"))
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = c("date","time")) %>%
mutate(residuals = predict(eq, newdata = data_q1e))
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = c("date","time")) %>%
mutate(residuals = predict(eq, newdata = data_q1e)) %>%
mutate(forecast_error = y - forecasts) %>%
select(date, residuals, forecast_error)
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = c("date","time")) %>%
mutate(residuals = predict(eq, newdata = data_q1e))
data_q1e <- data
data_q1e <- data %>%
mutate(residuals = eq$resid)
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = c("date","time")) %>%
mutate(residuals = predict(eq, newdata = data_q1e))
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = c("date","time"))
data_q1e <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = c("date","time"))
data <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
filter(date >= as.Date("2019-03-01") & =< as.Date("2019-12-01"))
data <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
filter(date >= as.Date("2019-03-01") & date =< as.Date("2019-12-01"))
data <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
filter(date >= as.Date("2019-03-01") & date <= as.Date("2019-12-01"))
data_2019 <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
filter(date >= as.Date("2019-03-01") & date <= as.Date("2019-12-01"))
data <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
# Filter for estimation period
filter(date >= as.Date("2000-03-01") & date <= as.Date("2018-12-01")) %>%
# Creating a time trend dummy
mutate(time = row_number() * 0.25)
View(data_2019)
forecasts <- data.frame(time = seq(from = as.numeric(tail(data$time, 1)) + 0.25, by = 0.25, length.out = 4))
forecasts <- data_2019 %>%
mutate(forecasts = predict(eq, newdata = data_2019)) %>%
mutate(date = seq.Date(from = as.Date("2019-03-01"),
to = as.Date("2019-12-01"),
by = "3 months"))
forecasts <- forecasts %>%
mutate(forecasts = predict(eq, newdata = data_2019)) %>%
mutate(date = seq.Date(from = as.Date("2019-03-01"),
to = as.Date("2019-12-01"),
by = "3 months"))
forecasts <- forecasts
View(forecasts)
forecasts <- forecasts %>%
mutate(forecasts = predict(eq, newdata = forecasts)) %>%
mutate(date = seq.Date(from = as.Date("2019-03-01"),
to = as.Date("2019-12-01"),
by = "3 months"))
data_2019 <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
filter(date >= as.Date("2019-03-01") & date <= as.Date("2019-12-01")) %>%
# Append forecast values
inner_join(forecasts, by = "date")
data_2019 <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
filter(date >= as.Date("2019-03-01") & date <= as.Date("2019-12-01")) %>%
# Append forecast values
inner_join(forecasts, by = "date") %>%
# Produce forecast errors
mutate(forecast_errors = y_log - forecasts)
data <- data %>%
mutate(residuals = eq$resid)
data <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = "date")
data <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = "date") %>%
select(date, residuals, forecast_errors)
data <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = "date")
data <- read_csv("retailsales.csv") %>%
clean_names() %>%
select(date, y = total) %>%
mutate(
date = my(date),
year = year(date),
quarter = quarter(date),
year_quarter = paste0(year,"Q",quarter),
quarter_end_date = case_when(
quarter == 1 ~ make_date(year, 3, 1),
quarter == 2 ~ make_date(year, 6, 1),
quarter == 3 ~ make_date(year, 9, 1),
quarter == 4 ~ make_date(year, 12, 1))
) %>%
group_by(quarter_end_date) %>%
summarise(y = sum(y, na.rm = TRUE)) %>%
select(date = quarter_end_date, y) %>%
# Creating log series
mutate(y_log = log(y)) %>%
# Filter for estimation period
filter(date >= as.Date("2000-03-01") & date <= as.Date("2018-12-01")) %>%
# Creating a time trend dummy
mutate(time = row_number() * 0.25)
data_comparison <- data %>%
mutate(residuals = eq$resid) %>%
full_join(data_2019, by = "date") %>%
select(date, residuals, forecast_errors)
View(data_comparison)
ggplots(data_comparison, aes(x = date)) +
geom_line(aes(y = residuals), color = "blue", size = 1) +
geom_line(aes(y = forecast_errors), color = "red", size = 1) +
```
ggplots(data_comparison, aes(x = date)) +
geom_line(aes(y = residuals), color = "blue", size = 1) +
geom_line(aes(y = forecast_errors), color = "red", size = 1)
ggplot(data_comparison, aes(x = date)) +
geom_line(aes(y = residuals), color = "blue", size = 1) +
geom_line(aes(y = forecast_errors), color = "red", size = 1)
View(data)
View(data)
